# Generated by Django 5.0.1 on 2024-01-11 00:35

import authAPI.manager
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Facilitator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('address', models.CharField(blank=True, default='', max_length=100)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
                ('postal_code', models.CharField(blank=True, default='', max_length=6)),
                ('image', models.URLField(default='')),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.CharField(default=None, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registerer_name', models.CharField(max_length=150)),
                ('registerer_job_title', models.CharField(max_length=100)),
                ('registerer_age', models.IntegerField()),
                ('registerer_phone_number', models.CharField(max_length=15)),
                ('registerer_email', models.EmailField(max_length=254)),
                ('registerer_address', models.CharField(max_length=200)),
                ('registerer_country', models.CharField(max_length=200)),
                ('registerer_state', models.CharField(max_length=200)),
                ('registerer_city', models.CharField(max_length=200)),
                ('registerer_zip', models.CharField(max_length=200)),
                ('registerer_photo', models.URLField(blank=True, default='', null=True)),
                ('organization_name', models.CharField(max_length=100)),
                ('logo', models.URLField(default='')),
                ('location', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('website', models.URLField()),
                ('size', models.IntegerField()),
                ('date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(default='', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('username', models.CharField(default='', max_length=100, unique=True)),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('address', models.CharField(blank=True, default='', max_length=100)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
                ('postal_code', models.CharField(blank=True, default='', max_length=6)),
                ('image', models.URLField(default='')),
                ('current_job_field', models.CharField(blank=True, default='', max_length=100)),
                ('desired_job_field', models.CharField(blank=True, default='', max_length=100)),
                ('current_job', models.CharField(blank=True, default='', max_length=100)),
                ('desired_job', models.CharField(blank=True, default='', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', authAPI.manager.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FacilitatorGender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('facilitator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authAPI.facilitator')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authAPI.gender')),
            ],
        ),
        migrations.AddField(
            model_name='facilitator',
            name='gender',
            field=models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='facilitator_gender', to='authAPI.facilitatorgender'),
        ),
        migrations.CreateModel(
            name='OrganizationRegistererGender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authAPI.gender')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authAPI.organization')),
            ],
        ),
        migrations.AddField(
            model_name='organization',
            name='registerer_gender',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registerer_gender', to='authAPI.organizationregisterergender'),
        ),
        migrations.AddField(
            model_name='organization',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authAPI.organizationtype'),
        ),
        migrations.CreateModel(
            name='OrganizationUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200)),
                ('organization', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='authAPI.organization')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_name', models.CharField(max_length=150)),
                ('contact_job_title', models.CharField(max_length=100)),
                ('contact_email', models.EmailField(max_length=254)),
                ('partner_organization_name', models.CharField(max_length=100)),
                ('logo', models.URLField(default='')),
                ('location', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('website', models.URLField()),
                ('size', models.IntegerField()),
                ('date', models.DateField(auto_now=True)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authAPI.organizationtype')),
            ],
        ),
        migrations.CreateModel(
            name='UserAcademicLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authAPI.academiclevel')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='academic_level',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_academic_level', to='authAPI.useracademiclevel'),
        ),
        migrations.CreateModel(
            name='UserGender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authAPI.gender')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='gender',
            field=models.OneToOneField(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_gender', to='authAPI.usergender'),
        ),
    ]
